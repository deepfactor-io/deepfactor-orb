description: >
  This command runs a web scan against the specified URL
parameters:
  api-key:
    type: env_var_name
    default: DF_API_KEY
    description: >
      Name of the environment variable storing your DeepFactor API Key
  app-name:
    type: string
    description: "The app name inside DeepFactor"
  component-name:
    type: string
    description: "The component name to be used inside DeepFactor"
  version:
    type: string
    description: Optional version for the component
    default: ${CIRCLE_BUILD_NUM}
  portal-url:
    type: string
    description: "The DeepFactor portal url eg https://deepfactor.mycompany.com"
  scan-type:
    type: enum
    description: "The type of scan can be either owasp-zap-full or owasp-zap-api"
    default: "owasp-zap-full"
    enum: ["owasp-zap-full","owasp-zap-api"]
  scan-strength:
    type: enum
    description: "The strength of the scan. Possible values are Low, Medium, High"
    default: "Medium"
    enum: ["Low","Medium","High"]
  scan-auth-type:
    type: enum
    description: "The auth type to use for the scanned application, Possible values are none, custom, formBasedAuthentication, jsonBasedAuthentication, scriptBasedAuthentication"
    default: "none"
    enum: ["none","custom","formBasedAuthentication","jsonBasedAuthentication","scriptBasedAuthentication"]
  scan-url:
    type: string
    description: "The url of the application to run the scan against"
steps:
  - run:
      name: Run a web scan against an application
      environment:
        DF_APP: <<parameters.app-name>>
        DF_COMPONENT: <<parameters.component-name>>
        DF_COMPONENT_VERSION: <<parameters.version>>
        DF_PORTAL_URL: <<parameters.portal-url>>
        API_KEY: <<parameters.api-key>>
        DF_SCAN_CONFIG_TYPE: <<parameters.scan-type>>
        DF_SCAN_CONFIG_STRENGTH: <<parameters.scan-strength>>
        DF_SCAN_CONFIG_AUTH_TYPE: <<parameters.scan-auth-type>>
        DF_SCAN_CONFIG_SCAN_URL: <<parameters.scan-url>>
      command: << include(scripts/webscan.sh) >>
