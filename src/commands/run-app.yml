description: >
  Instrument and run app/test
parameters:
  tag:
    type: string
    description: "The tag to pass to deepfactor in the format of key=value"
    default: ""
  version:
    type: string
    description: "The component version"
    default: ${CIRCLE_BUILD_NUM}
  app-name:
    type: string
    description: "The app name to be used inside DeepFactor"
  component-name:
    type: string
    description: "The component name to be used inside DeepFactor"
  cmd:
    type: string
    description: "The command to be executed to run the application eg. would be /usr/bin/npm run or java -jar acme.jar"
  run-token:
    type: env_var_name
    default: DF_RUN_TOKEN
    description: "The name of the environment variable storing your DeepFactor run token for instrumenting the application"
steps:
  - run:
      name: Instrument and run app/test
      shell: /bin/sh
      command: |
        echo DF_RUN_TOKEN=${<<parameters.run-token>>} >> "${BASH_ENV}"
        if [ -z ${<<parameters.run-token>>} ]; then
          echo "The deepfactor run token <<parameters.run-token>> is not set"
          exit 1
        fi
        if [ -z "<<parameters.tag>>" ]; then
          dfctl run -v -a <<parameters.app-name>> -c <<parameters.component-name>> --version "<<parameters.version>>" --cmd <<parameters.cmd>>
        else
          dfctl run -v -a <<parameters.app-name>> -c <<parameters.component-name>> -t <<parameters.tag>> --version "<<parameters.version>>" --cmd <<parameters.cmd>>
        fi
